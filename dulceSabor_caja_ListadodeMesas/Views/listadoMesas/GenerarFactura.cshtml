@model dulceSabor_caja_ListadodeMesas.Models.cuenta
@{
    ViewData["Title"] = "Generar Factura";
    var cantidadYTotal = ViewData["cantidadYTotal"] as dynamic;
    var clientesListado = ViewData["listaClientes"] as dynamic;
}

<!DOCTYPE html>
<html lang="es">

<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Proceso de Cobro</title>
    <style>
        /* Estilos generales */
        body {
            font-family: Arial, sans-serif;
            margin: 0;
            padding: 0;
            background-color: #f2f2f2;
            display: flex;
            justify-content: center;
            align-items: center;
            height: 100vh;
        }

        .container {
            max-width: 1000px;
            padding: 20px;
            background-color: #fff;
            border-radius: 10px;
            box-shadow: 0 0 10px rgba(0, 0, 0, 0.1);
            display: flex;
        }

        .left-section,
        .right-section {
            flex: 1;
            padding: 20px;
        }

        .right-section {
            border-left: 1px solid #ddd;
        }

        h1 {
            text-align: center;
            color: #333;
        }

        .id-cuenta {
            margin-bottom: 20px;
        }

        /* Estilos de la tabla de pedidos */
        table {
            width: 100%;
            border-collapse: collapse;
            margin-top: 20px;
        }

        th,
        td {
            padding: 10px;
            text-align: left;
            border-bottom: 1px solid #ddd;
        }

        th {
            background-color: #f2f2f2;
        }

        /* Estilos del formulario */
        form {
            margin-top: 20px;
        }

        label {
            display: block;
            margin-bottom: 5px;
        }

        input[type="text"],
        input[type="number"] {
            width: calc(100% - 16px);
            padding: 8px;
            margin-bottom: 10px;
            border: 1px solid #ccc;
            border-radius: 5px;
        }

        input[type="radio"] {
            margin-right: 5px;
        }

        .cliente-nuevo {
            display: none;
        }

        .boton-cobrar {
            display: block;
            width: 100%;
            padding: 10px;
            border: none;
            background-color: #ccc;
            color: white;
            cursor: pointer;
            border-radius: 5px;
            transition: background-color 0.3s;
        }

        .label-inline {
            display: inline-block;
            width: 80px;
            text-align: right;
            margin-right: 10px;
        }
    </style>
</head>

<body>
    <div class="container">
        <div class="left-section">
            <h1>Proceso de Cobro</h1>
            <div class="id-cuenta">
                <p>Id de la Cuenta: <strong>@Model.Id_cuenta</strong></p>
            </div>
            <table>
                <thead>
                    <tr>
                        <th>Item</th>
                        <th>Cantidad</th>
                        <th>Estado</th>
                        <th>Precio</th>
                        <th>Seleccionar</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var detalle_cuenta in (IEnumerable<dynamic>)ViewData["lista_detPedidos"])
                    {
                        if (@detalle_cuenta.id_cuenta == @Model.Id_cuenta)
                        {
                            <tr>
                                <td>
                                    @detalle_cuenta.nombre_plato
                                </td>
                                <td>
                                    @detalle_cuenta.cantidad
                                </td>
                                <td>
                                    @detalle_cuenta.estado_detPedido
                                </td>
                                <td>
                                    @detalle_cuenta.precio
                                </td>
                                <td>
                                    <input type="checkbox" class="detalle-pedido" data-id="@detalle_cuenta.id_detP" data-precio="@detalle_cuenta.precio" />
                                </td>
                            </tr>
                        }
                    }
                </tbody>
            </table>
        </div>
        <div class="right-section">
            <form asp-action="facturar">
                <div class="row">
                    <p class="nombreCliente">Cliente:</p>
                    <div class="col-4">
                        <label for="existente">Existente:</label>
                        <input type="radio" name="clienteOption" value="existente" checked onchange="validarDUI()">
                    </div>
                    <div class="col-4">
                        <label for="nuevo">Nuevo:</label>
                        <input type="radio" name="clienteOption" value="nuevo" onchange="validarDUI()">
                    </div>
                </div>
                <div id="divClienteExistente">
                    <!-- Aquí puedes poner el campo para ingresar el número de identificación -->
                    <label>DUI</label>
                    @Html.TextBox("dui_existente", "", new { @class = "form-control", id = "dui_existente", name = "dui_existente", onchange = "validarDUI()" })
                    <!--<button type="button" class="btn btn-outline-primary" onclick="validarDUI()">Verificar</button>-->
                </div>
                <div id="divNuevoCliente" style="display:none;">
                    <div class="row">
                        <div class="col-6">
                            <label>Nombre</label>
                            @Html.TextBox("nombre", "", new { @class = "form-control" })
                        </div>
                        <div class="col-6">
                            <label>Apellido</label>
                            @Html.TextBox("apellido", "", new { @class = "form-control" })
                        </div>
                        <div class="col-6">
                            <label>Correo</label>
                            @Html.TextBox("correo", "", new { @class = "form-control" })
                        </div>
                        <div class="col-6">
                            <label>DUI</label>
                            @Html.TextBox("dui_nuevo", "", new { @class = "form-control" })
                        </div>
                    </div>
                </div>
                <div>
                    @Html.RadioButton("metodo_pago", "Efectivo", true, new { id = "efectivo" })
                    Efectivo
                    @Html.RadioButton("metodo_pago", "Tarjeta", true, new { id = "tarjeta" })
                    Tarjeta Cre/Dev
                </div>
                <br>
                <div class="row">
                    <div id="cantidadContenedor" class="col-6">
                        <div class="row">
                            <div class="col-6">
                                <label for="cantidad" class="label-inline">Cantidad:</label>
                            </div>
                            <div class="col-6">
                                <input type="text" id="cantidad" name="cantidad" readonly />
                            </div>
                        </div>
                    </div>
                    <br>
                    <div id="total" class="col-6">
                        <div class="row">
                            <div class="col-6">
                                <label for="totalPagar" class="label-inline">Total:</label>
                            </div>
                            <div class="col-6">
                                <input type="text" id="totalPagar" name="totalPagar" readonly />
                            </div>
                        </div>
                    </div>
                </div>
                <input type="hidden" id="idsPedidosSeleccionados" name="idsPedidosSeleccionados" readonly />
                <br>
                <input type="submit" class="boton-cobrar" id="botonEnviar" value="Pagar" disabled />
            </form>
        </div>
    </div>
    @section Scripts {
        <script>
            var totalPagar = 0;
            var cantidadSeleccionada = 0;
            var idsSeleccionados = []; // Inicializar el array de IDs seleccionados

            $(document).ready(function () {
                $(".detalle-pedido").change(function () {
                    actualizarTotales();
                });

                // Escuchar cambios en los radio button de cliente existente o nuevo
                $('input[name="clienteOption"]').change(function () {
                    if (this.value === 'existente') {
                        $('#divClienteExistente').show();
                        $('#divNuevoCliente').hide();
                    } else {
                        var duiExistenteInput = document.getElementById("dui_existente");
                        var duiExistenteValue = duiExistenteInput.value;
                        duiExistenteInput.value = "";
                        $('#divClienteExistente').hide();
                        $('#divNuevoCliente').show();
                    }
                    validarFormulario();
                });

                // Escuchar cambios en el DUI existente
                $("#dui_existente").on('input', function () {
                    validarFormulario();
                });

                // Escuchar cambios en los campos de cliente nuevo
                $("#nombre, #apellido, #correo, #dui_nuevo").on('input', function () {
                    validarFormulario();
                });
            });

            // Función para validar y habilitar el botón de pago según las condiciones
            function validarFormulario() {
                if (todosCamposLlenos() && alMenosUnElementoSeleccionado()) {
                    var botonEnviar = document.getElementById("botonEnviar");
                    var nombreCliente = document.querySelector(".nombreCliente");

                    if ($('input[name="clienteOption"]:checked').val() === 'existente') {
                        var duiIngresado = $("#dui_existente").val();
                        var datosClientes = @Html.Raw(Json.Serialize(clientesListado));

                        var clienteEncontrado = datosClientes.find(function (cliente) {
                            return cliente.dui === duiIngresado;
                        });

                        if (clienteEncontrado) {
                            botonEnviar.style.backgroundColor = "#4CAF50";
                            nombreCliente.textContent = "Cliente: " + clienteEncontrado.nombre + " " + clienteEncontrado.apellido;
                            botonEnviar.disabled = false;
                            return;
                        }
                    } else {
                        botonEnviar.style.backgroundColor = "#4CAF50";
                        nombreCliente.textContent = "Cliente: " + $("#nombre").val() + " " + $("#apellido").val();
                        botonEnviar.disabled = false;
                        return;
                    }
                }
                // Si no se cumplen las condiciones, deshabilitar el botón
                var botonEnviar = document.getElementById("botonEnviar");
                var nombreCliente = document.querySelector(".nombreCliente");
                botonEnviar.style.backgroundColor = "#ccc";
                nombreCliente.textContent = "Cliente: ";
                botonEnviar.disabled = true;
            }

            // Función para verificar si todos los campos requeridos están llenos
            function todosCamposLlenos() {
                if ($('input[name="clienteOption"]:checked').val() === 'existente') {
                    return $("#dui_existente").val() !== "";
                } else {
                    return $("#nombre").val() !== "" &&
                        $("#apellido").val() !== "" &&
                        $("#correo").val() !== "" &&
                        $("#dui_nuevo").val() !== "";
                }
            }

            // Función para verificar si al menos un elemento de la tabla está seleccionado
            function alMenosUnElementoSeleccionado() {
                return $(".detalle-pedido:checked").length > 0;
            }

            // Función para actualizar los totales cuando se seleccionan o deseleccionan pedidos
            function actualizarTotales() {
                totalPagar = 0;
                cantidadSeleccionada = 0;
                idsSeleccionados = [];

                $(".detalle-pedido:checked").each(function () {
                    var idPedido = $(this).data("id");
                    var precio = parseFloat($(this).data("precio"));
                    var cantidad = parseInt($(this).closest("tr").find("td:eq(1)").text());

                    totalPagar += (precio * cantidad);
                    cantidadSeleccionada += cantidad;
                    idsSeleccionados.push(idPedido);
                });

                $("#totalPagar").val(totalPagar.toFixed(2));
                $("#cantidad").val(cantidadSeleccionada);
                $("#idsPedidosSeleccionados").val(idsSeleccionados.join(","));

                validarFormulario();
            }
        </script>
    }


</body>

</html>